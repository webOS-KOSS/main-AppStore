[{"/home/user/webos/webOS-app-store/app/src/index.js":"1","/home/user/webos/webOS-app-store/app/src/reportWebVitals.js":"2","/home/user/webos/webOS-app-store/app/src/App/App.js":"3","/home/user/webos/webOS-app-store/app/src/components/Tile.js":"4","/home/user/webos/webOS-app-store/app/src/views/Tiles.js":"5"},{"size":775,"mtime":1665051466350,"results":"6","hashOfConfig":"7"},{"size":341,"mtime":1665051466350,"results":"8","hashOfConfig":"7"},{"size":598,"mtime":1665338597009,"results":"9","hashOfConfig":"7"},{"size":1899,"mtime":1665339280248,"results":"10","hashOfConfig":"7"},{"size":1360,"mtime":1665340013527,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","suppressedMessages":"14","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"15"},"194mose",{"filePath":"16","messages":"17","suppressedMessages":"18","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"15"},{"filePath":"19","messages":"20","suppressedMessages":"21","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"22","messages":"23","suppressedMessages":"24","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25"},{"filePath":"26","messages":"27","suppressedMessages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/home/user/webos/webOS-app-store/app/src/index.js",[],[],["29"],"/home/user/webos/webOS-app-store/app/src/reportWebVitals.js",[],[],"/home/user/webos/webOS-app-store/app/src/App/App.js",[],[],"/home/user/webos/webOS-app-store/app/src/components/Tile.js",["30","31"],[],"import kind from \"@enact/core/kind\";\nimport Proptypes from \"prop-types\";\nimport Button from \"@enact/sandstone/Button\";\n\nimport css from \"./Tile.module.less\";\nimport thumbnail from \"../../icon.jpeg\";\nimport { useState } from \"react\";\n\nconst Btn = () => {\n  const [toggle, chToggle] = useState(false);\n\n  return (\n    <div className={css.btn}>\n      <Button onClick={() => chToggle(!toggle)}>\n        {toggle ? \"remove\" : \"install\"}\n      </Button>\n    </div>\n  );\n};\n\nconst descs = {\n  배달: \"배달 물품 도난 방지를 위해 어쩌구 저쩌구 이러쿵 저러쿵..\",\n  차량: \"가정에 손님이 방문할 때 거주민이 아닌 차량이라서 별도의 인증 절차를 걸쳐야 하는 번거러움을 해결 ...\",\n  cctv: \"그냥 cctv로 방법에 유용할듯 대충 뭐 그런거임\",\n  가전제어:\n    \"집이 넓으면 월패드에서 전등, 창문 뭐 그런거 작동할 수 있음. 기상 특보랑 게시판에서 나오는 이벤트에 맞춰서 예약도 가능함.\",\n  운동보조: \"카메라 api가 하자 있어서 삽질 개같이 함\",\n};\n\nconst TileBase = kind({\n  name: \"TileBase\",\n\n  styles: {\n    css,\n    className: \"tile-box\",\n  },\n\n  propTypes: {\n    children: Proptypes.string,\n    desc: Proptypes.string,\n    size: Proptypes.number,\n  },\n\n  defaultProps: {\n    size: 200,\n  },\n\n  render: ({ children, size, ...rest }) => {\n    return (\n      <div {...rest}>\n        <div className={css.tile}>\n          <div className={css.icon}>\n            <img\n              className={css.img}\n              src={thumbnail}\n              width={size}\n              height={size}\n            />\n            <div className={css.appName}>{children}</div>\n          </div>\n          <div className={css.desc}>{descs[children]}</div>\n          <Btn />\n        </div>\n      </div>\n    );\n  },\n});\n\nconst Tile = TileBase;\n\nexport default TileBase;\nexport { Tile, TileBase };\n","/home/user/webos/webOS-app-store/app/src/views/Tiles.js",["32"],[],{"ruleId":"33","replacedBy":"34"},{"ruleId":"35","severity":1,"message":"36","line":14,"column":15,"nodeType":"37","messageId":"38","endLine":14,"endColumn":48},{"ruleId":"39","severity":1,"message":"40","line":53,"column":13,"nodeType":"41","endLine":58,"endColumn":15},{"ruleId":"35","severity":1,"message":"36","line":41,"column":60,"nodeType":"37","messageId":"38","endLine":41,"endColumn":78},"no-catch-shadow",["42"],"react/jsx-no-bind","JSX props should not use arrow functions","JSXAttribute","arrowFunc","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-shadow"]